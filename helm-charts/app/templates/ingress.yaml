{{- $fullName := include "app.fullname" . -}}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "app.labels" . | nindent 4 }}

  annotations:
    {{- with .Values.ingress.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
    cert-manager.io/cluster-issuer: letsencrypt-production
    nginx.org/websocket-services: "{{ $fullName }}"
    nginx.ingress.kubernetes.io/enable-websocket: "true"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-buffering: "off"
    nginx.ingress.kubernetes.io/from-to-www-redirect: "true"
spec:
  ingressClassName: nginx
  {{- if .Values.ingress.tls }}
  tls:
    {{- range .Values.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
        {{- range .apiHosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          - path: '/'
            pathType: Prefix
            backend:
              service:
                name: {{ $fullName }}
                port:
                  number: 80
    {{- end }}
    {{- range .Values.ingress.apiHosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          - path: '/'
            pathType: Prefix
            backend:
              service:
                name: {{ $fullName }}
                port:
                  number: 3001
    {{- end }}
